(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{460:function(module,exports,__webpack_require__){__webpack_require__(461),__webpack_require__(617),__webpack_require__(618),__webpack_require__(828),__webpack_require__(829),__webpack_require__(833),__webpack_require__(834),__webpack_require__(832),__webpack_require__(831),__webpack_require__(835),__webpack_require__(836),module.exports=__webpack_require__(818)},528:function(module,exports){},618:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(329)},818:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(329).configure)([__webpack_require__(819),__webpack_require__(820)],module,!1)}).call(this,__webpack_require__(185)(module))},819:function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id=819},820:function(module,exports,__webpack_require__){var map={"./stories/BinarySearchTree.stories.tsx":830};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=820},824:function(module,exports,__webpack_require__){var api=__webpack_require__(825),content=__webpack_require__(826);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},826:function(module,exports,__webpack_require__){(exports=__webpack_require__(827)(!1)).push([module.i,"#react-tree-vis {\n  --line-color: #ccc;\n  --line-hover-color: #5f6674;\n  --line-radius: 5px;\n\n  --node-border: none;\n  --node-border-radius: 200px;\n  --node-bg-color: #fff;\n  --node-font-color: #666;\n  --node-shadow: -5px -5px 20px #fff, 5px 5px 20px #babecc;\n  --node-text-shadow: none;\n\n  /* highlighted node */\n  --node-hl-border: none;\n  --node-hl-bg-color: #fff;\n  --node-hl-font-color: #fff;\n  --node-hl-shadow: -5px -5px 20px #fff, 5px 5px 20px #babecc;\n  --node-hl-text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #00ff15,\n    0 0 20px #00ff15, 0 0 25px #00ff15, 0 0 30px #00ff15, 0 0 35px #00ff15;\n\n    --node-hover-border: none;\n  --node-hover-bg-color: #fff;\n  --node-hover-font-color: #002574;\n  --node-hover-shadow: -1px -1px 5px #fff, 1px 1px 5px #babecc;\n  --node-hover-text-shadow: none;\n\n  --node-null-font-color: #7c7c7c2f;\n  --node-null-hover-font-color: #ff0000b9;\n\n  --transition: 0.5s;\n}\n\n#react-tree-vis ul {\n  padding: 0;\n  padding-top: 20px;\n  position: relative;\n  transition: all var(--transition);\n}\n\n#react-tree-vis > ul {\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  margin: 0 auto;\n}\n\n#react-tree-vis li {\n  float: left;\n  text-align: center;\n  list-style-type: none;\n  position: relative;\n  padding: 10px 1px 0 1px;\n  transition: all var(--transition);\n}\n\n/* Line Styles */\n#react-tree-vis li::before,\n#react-tree-vis li::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 50%;\n  border-top: 1px solid var(--line-color);\n  width: 50%;\n  height: 10px;\n  transition: all var(--transition);\n}\n\n#react-tree-vis li::after {\n  right: auto;\n  left: 50%;\n  border-left: 1px solid var(--line-color);\n}\n\n#react-tree-vis li:last-child::before {\n  border-right: 1px solid var(--line-color);\n  border-radius: 0 var(--line-radius) 0 0;\n}\n\n#react-tree-vis li:first-child::after {\n  border-radius: var(--line-radius) 0 0 0;\n}\n\n#react-tree-vis ul ul::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 50%;\n  border-left: 1px solid var(--line-color);\n  width: 0;\n  height: 20px;\n  transition: all var(--transition);\n}\n\n#react-tree-vis li:only-child::after,\n#react-tree-vis li:only-child::before {\n  display: none;\n}\n\n#react-tree-vis li:only-child {\n  padding-top: 0;\n}\n\n#react-tree-vis li:first-child::before,\n#react-tree-vis li:last-child::after {\n  border: 0 none;\n}\n\n/* Node Styles starts */\n#react-tree-vis li div {\n  padding: 6px 12px;\n  text-decoration: none;\n  color: var(--node-font-color);\n  font-family: arial, verdana, tahoma;\n  font-size: 20px;\n  display: inline-block;\n  box-shadow: var(--node-shadow);\n  text-shadow: var(--node-text-shadow);\n  border-radius: var(--node-border-radius);\n  border: var(--node-border);\n  background-color: var(--node-bg-color);\n  transition: all var(--transition);\n}\n\n#react-tree-vis li div.end {\n  color: #c20000;\n}\n\n#react-tree-vis li div.red {\n  background-color: rgba(218, 96, 96, 0.5);\n  text-shadow: none;\n}\n\n#react-tree-vis li div.black {\n  background-color: rgba(172, 172, 172, 0.5);\n  text-shadow: none;\n}\n\n#react-tree-vis li div.highlight {\n  background-color: var(--node-hl-bg-color);\n  border: var(--node-hl-border);\n  box-shadow: var(--node-hl-shadow);\n  color: var(--node-hl-font-color);\n  text-shadow: var(--node-hl-text-shadow);\n}\n\n#react-tree-vis li div.highlight.red {\n  color: #fff;\n  text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #f00, 0 0 20px #f00,\n    0 0 25px #f00, 0 0 30px #f00, 0 0 35px #f00;\n}\n\n#react-tree-vis li div.highlight.black {\n  color: #fff;\n  text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #000, 0 0 20px #000,\n    0 0 25px #000, 0 0 30px #000, 0 0 35px #000;\n}\n\n/* Hover Styles starts */\n#react-tree-vis li div:hover {\n  border: var(--node-hover-border);\n  color: var(--node-hover-font-color);\n  background-color: var(--node-hover-bg-color);\n  box-shadow: var(--node-hover-shadow);\n  text-shadow: var(--node-hover-text-shadow);\n}\n\n#react-tree-vis li div:hover + ul li::after,\n#react-tree-vis li div:hover + ul li::before,\n#react-tree-vis li div:hover + ul::before,\n#react-tree-vis li div:hover + ul ul::before {\n  border-color: var(--line-hover-color);\n}\n\n#react-tree-vis li.null div {\n  color: var(--node-null-font-color);\n}\n\n#react-tree-vis li.null div:hover {\n  color: var(--node-null-hover-font-color);\n}\n\n#react-tree-vis .height {\n  font-size: 13px;\n}\n",""]),module.exports=exports},830:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SimpleExample",(function(){return BinarySearchTree_stories_SimpleExample})),__webpack_require__.d(__webpack_exports__,"AllFunctions",(function(){return BinarySearchTree_stories_AllFunctions}));__webpack_require__(65),__webpack_require__(60),__webpack_require__(67),__webpack_require__(110),__webpack_require__(19),__webpack_require__(821),__webpack_require__(10),__webpack_require__(16),__webpack_require__(14),__webpack_require__(191),__webpack_require__(29),__webpack_require__(31),__webpack_require__(18),__webpack_require__(84),__webpack_require__(33),__webpack_require__(32),__webpack_require__(41),__webpack_require__(50),__webpack_require__(9),__webpack_require__(96);var react=__webpack_require__(0),react_default=__webpack_require__.n(react),BINARY_TREE_TYPE_BALANCED=(__webpack_require__(36),__webpack_require__(37),"balanced"),BINARY_TREE_TYPE_COMPLETE="complete",BINARY_TREE_TYPE_PERFECT="perfect",BINARY_TREE_TYPE_FULL="full",CSS_VARIABLE_MAP={lineColor:{variableName:"--line-color",defaultValue:"#ccc"},lineHoverColor:{variableName:"--line-hover-color",defaultValue:"#5f6674"},lineRadius:{variableName:"--line-radius",defaultValue:"5px"},nodeBorder:{variableName:"--node-border",defaultValue:"none"},nodeBorderRadius:{variableName:"--node-border-radius",defaultValue:"200px"},nodeBackgroundColor:{variableName:"--node-bg-color",defaultValue:"#fff"},nodeFontColor:{variableName:"--node-font-color",defaultValue:"#666"},nodeShadow:{variableName:"--node-shadow",defaultValue:"-5px -5px 20px #fff, 5px 5px 20px #babecc"},nodeTextShadow:{variableName:"--node-text-shadow",defaultValue:"none"},nodeHighlightBorder:{variableName:"--node-hl-border",defaultValue:"none"},nodeHighlightBackgroundColor:{variableName:"--node-hl-bg-color",defaultValue:"#fff"},nodeHighlightFontColor:{variableName:"--node-hl-font-color",defaultValue:"#fff"},nodeHighlightShadow:{variableName:"--node-hl-shadow",defaultValue:"-5px -5px 20px #fff, 5px 5px 20px #babecc"},nodeHighlightTextShadow:{variableName:"--node-hl-text-shadow",defaultValue:"0 0 5px #fff, 0 0 10px #fff, 0 0 15px #00ff15, 0 0 20px #00ff15, 0 0 25px #00ff15, 0 0 30px #00ff15, 0 0 35px #00ff15"},nodeHoverBorder:{variableName:"--node-hover-border",defaultValue:"none"},nodeHoverBackgroundColor:{variableName:"--node-hover-bg-color",defaultValue:"#fff"},nodeHoverFontColor:{variableName:"--node-hover-font-color",defaultValue:"#002574"},nodeHoverShadow:{variableName:"--node-hover-shadow",defaultValue:"-1px -1px 5px #fff, 1px 1px 5px #babecc"},nodeHoverTextShadow:{variableName:"--node-hover-text-shadow",defaultValue:"none"},nodeNullFontColor:{variableName:"--node-null-font-color",defaultValue:"#7c7c7c2f"},nodeNullHoverFontColor:{variableName:"--node-null-hover-font-color",defaultValue:"#ff0000b9"},transitionDuration:{variableName:"--transition",defaultValue:"0.5s"}},jsx_runtime=(__webpack_require__(127),__webpack_require__(415),__webpack_require__(8));function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}var NULL_NODE_JSX=Object(jsx_runtime.jsx)("li",{className:"null",children:Object(jsx_runtime.jsx)("div",{children:"null"})}),BSTree_getNormalNodeJSX=function getNormalNodeJSX(value,leftJSX,rightJSX){var isHighlighted=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return Object(jsx_runtime.jsxs)("li",{children:[Object(jsx_runtime.jsx)("div",{className:"normal ".concat(isHighlighted?"highlight":""),children:value}),Object(jsx_runtime.jsxs)("ul",{children:[leftJSX," ",rightJSX]})]},value)};BSTree_getNormalNodeJSX.displayName="getNormalNodeJSX";var Node=function(){function Node(value){_classCallCheck(this,Node),this.value=void 0,this.left=void 0,this.right=void 0,this.parent=void 0,this.leftJSX=void 0,this.rightJSX=void 0,this.currentJSX=void 0,this.value=value,this.left=null,this.right=null,this.parent=null,this.leftJSX=NULL_NODE_JSX,this.rightJSX=NULL_NODE_JSX,this.currentJSX=BSTree_getNormalNodeJSX(this.value,this.leftJSX,this.rightJSX)}return _createClass(Node,[{key:"insert",value:function insert(node,isLeft){var newJSX=node.currentJSX;isLeft?this.leftJSX=newJSX:this.rightJSX=newJSX,this.setJSX(),this.updateRootJSX()}},{key:"setJSX",value:function setJSX(){this.currentJSX=BSTree_getNormalNodeJSX(this.value,this.leftJSX,this.rightJSX)}},{key:"updateRootJSX",value:function updateRootJSX(){null!==this.parent&&(this.parent.left===this?this.parent.insert(this,!0):this.parent.insert(this,!1))}},{key:"setChildToNull",value:function setChildToNull(isLeft){isLeft?this.leftJSX=NULL_NODE_JSX:this.rightJSX=NULL_NODE_JSX,this.setJSX(),this.updateRootJSX()}},{key:"setChildToChildsChild",value:function setChildToChildsChild(isLeftChild,isLeft){isLeftChild?isLeft?(this.leftJSX=this.left.left.currentJSX,this.setJSX()):(this.leftJSX=this.left.right.currentJSX,this.setJSX()):isLeft?(this.rightJSX=this.right.left.currentJSX,this.setJSX()):(this.rightJSX=this.right.right.currentJSX,this.setJSX()),this.updateRootJSX()}},{key:"remove",value:function remove(childrenCondtion){this.parent&&(childrenCondtion?"left"===childrenCondtion?this.parent.left===this?this.parent.setChildToChildsChild(!0,!0):this.parent.setChildToChildsChild(!1,!0):this.parent.left===this?this.parent.setChildToChildsChild(!0,!1):this.parent.setChildToChildsChild(!1,!1):this.parent.left===this?this.parent.setChildToNull(!0):this.parent.setChildToNull(!1))}},{key:"updateValue",value:function updateValue(value){this.value=value,this.setJSX(),this.updateRootJSX()}},{key:"addHighlight",value:function addHighlight(){this.currentJSX=BSTree_getNormalNodeJSX(this.value,this.leftJSX,this.rightJSX,!0),this.updateRootJSX()}},{key:"clearHighlight",value:function clearHighlight(){this.setJSX(),this.updateRootJSX()}},{key:"balanceJSX",value:function balanceJSX(){!this.left&&this.right?(this.rightJSX=this.right.currentJSX,this.setChildToNull(!0)):!this.right&&this.left?(this.leftJSX=this.left.currentJSX,this.setChildToNull(!1)):this.right&&this.left?(this.leftJSX=this.left.currentJSX,this.rightJSX=this.right.currentJSX,this.setJSX(),this.updateRootJSX()):(this.leftJSX=NULL_NODE_JSX,this.rightJSX=NULL_NODE_JSX,this.setJSX(),this.updateRootJSX())}}]),Node}(),BSTree=function(){function BST(){var num=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;_classCallCheck(this,BST),this.root=void 0,this.highlightedNode=void 0,this.leafDepth=void 0,this.root=null,num&&this.generateRandomBST(num),this.highlightedNode=null,this.leafDepth=-1}return _createClass(BST,[{key:"insert",value:function insert(value){this.clearHighlight();var newNode=new Node(value);null===this.root?this.root=newNode:this.insertNode(this.root,newNode)}},{key:"insertNode",value:function insertNode(node,newNode){newNode.value<node.value?null===node.left?(node.left=newNode,newNode.parent=node,node.insert(newNode,!0)):this.insertNode(node.left,newNode):null===node.right?(node.right=newNode,newNode.parent=node,node.insert(newNode,!1)):this.insertNode(node.right,newNode)}},{key:"findMax",value:function findMax(){var node=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.root;return null==node||null==node.right?node:this.findMax(node.right)}},{key:"findMin",value:function findMin(){var node=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.root;return null==node||null==node.left?node:this.findMin(node.left)}},{key:"remove",value:function remove(value){this.clearHighlight(),this.root=this.removeNode(this.root,value)}},{key:"removeNode",value:function removeNode(node,value){if(null===node)return null;if(value<node.value)return node.left=this.removeNode(node.left,value),node;if(value>node.value)return node.right=this.removeNode(node.right,value),node;if(null===node.left&&null===node.right)return node.remove(null),node=null;if(null===node.left)return node.remove("right"),node.right.parent=node.parent,node=node.right;if(null===node.right)return node.remove("left"),node.left.parent=node.parent,node=node.left;var minNodeOfRight=this.findMin(node.right);return node.updateValue(minNodeOfRight.value),node.right=this.removeNode(node.right,minNodeOfRight.value),node}},{key:"height",value:function height(){var ans,node=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.root;return null===node?-1:(ans=this.height(node.left),(ans=Math.max(this.height(node.right),ans))+1)}},{key:"countNodes",value:function countNodes(){var node=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.root;return null===node?0:this.countNodes(node.left)+1+this.countNodes(node.right)}},{key:"preorder",value:function preorder(list){var node=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.root;null!==node&&(list.push(node.value),this.preorder(list,node.left),this.preorder(list,node.right))}},{key:"inorder",value:function inorder(list){var node=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.root;null!==node&&(this.inorder(list,node.left),list.push(node.value),this.inorder(list,node.right))}},{key:"postorder",value:function postorder(list){var node=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.root;null!==node&&(this.postorder(list,node.left),this.postorder(list,node.right),list.push(node.value))}},{key:"search",value:function search(value){var node=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.root;return this.clearHighlight(),null!==node&&(node.value===value?(node.addHighlight(),this.highlightedNode=node,!0):node.value>value?this.search(value,node.left):this.search(value,node.right))}},{key:"generateRandomBST",value:function generateRandomBST(num){for(var lower=2*num+10,elements=new Set,i=0;i<num;i++){for(var value=Math.floor(Math.random()*(0-lower+1))+lower;elements.has(value);)value=Math.floor(Math.random()*(0-lower+1))+lower;elements.add(value),this.insert(value)}}},{key:"checkBST",value:function checkBST(){var BALANCED=BINARY_TREE_TYPE_BALANCED,COMPLETE=BINARY_TREE_TYPE_COMPLETE,FULL=BINARY_TREE_TYPE_FULL,PERFECT=BINARY_TREE_TYPE_PERFECT,BSTTypeList=[];return this.isBalanced()&&BSTTypeList.push(BALANCED),this.isComplete()&&BSTTypeList.push(COMPLETE),this.isPerfect()&&BSTTypeList.push(FULL),this.isFull()&&BSTTypeList.push(PERFECT),BSTTypeList}},{key:"isBalanced",value:function isBalanced(){var node=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.root;if(null===node)return!0;var leftHeight=this.height(node.left),rightHeight=this.height(node.right);return Math.abs(leftHeight-rightHeight)<=1&&(this.isBalanced(node.left)&&this.isBalanced(node.right))}},{key:"isComplete",value:function isComplete(){var totalNodes=this.countNodes();return this.isComplete2(0,totalNodes)}},{key:"isComplete2",value:function isComplete2(index,totalNodes){var node=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.root;if(null===node)return!0;if(index>=totalNodes)return!1;var ans=this.isComplete2(2*index+1,totalNodes,node.left);return ans&&(ans=this.isComplete2(2*index+2,totalNodes,node.right)),ans}},{key:"isPerfect",value:function isPerfect(){return!(!this.isFull()||!this.isComplete())&&this.isPerfect2()}},{key:"isPerfect2",value:function isPerfect2(){var node=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.root,depth=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!node)return!0;if(depth++,!node.right&&!node.left){if(-1!==this.leafDepth&&this.leafDepth!==depth)return!1;this.leafDepth=depth}return this.isPerfect2(node.left,depth)&&this.isPerfect2(node.right,depth)}},{key:"isFull",value:function isFull(){var ans,node=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.root;return null===node||(null===node.left&&null===node.right||null!==node.left&&null!==node.right&&((ans=this.isFull(node.left))&&(ans=this.isFull(node.right)),ans))}},{key:"balance",value:function balance(){var node=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.root;this.clearHighlight();var nodes=[];this.BSTToArr(node,nodes);var length=nodes.length;this.root=null,this.makeBST(nodes,0,length-1)}},{key:"BSTToArr",value:function BSTToArr(node,nodes){null!==node&&(this.BSTToArr(node.left,nodes),nodes.push(node),this.BSTToArr(node.right,nodes))}},{key:"makeBST",value:function makeBST(nodes,start,end){if(!(start>end)){var mid=Math.floor((start+end)/2);this.insert(nodes[mid].value),this.makeBST(nodes,start,mid-1),this.makeBST(nodes,mid+1,end)}}},{key:"clearHighlight",value:function clearHighlight(){this.highlightedNode&&(this.highlightedNode.clearHighlight(),this.highlightedNode=null)}}]),BST}();function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=arr&&("undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"]);if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var hooks_useTreeState=function useTreeState(treeObject){var _useState2=_slicedToArray(Object(react.useState)(treeObject),2),tree=_useState2[0],setTreeInternal=_useState2[1],_useState4=_slicedToArray(Object(react.useState)(null==treeObject?void 0:treeObject.root.currentJSX),2),treeJSX=_useState4[0],setTreeJSX=_useState4[1];return{tree:tree,treeJSX:treeJSX,setTree:function setTree(newTreeObject){var _newTreeObject$root;setTreeInternal(newTreeObject),setTreeJSX(null==newTreeObject||null===(_newTreeObject$root=newTreeObject.root)||void 0===_newTreeObject$root?void 0:_newTreeObject$root.currentJSX)}}};function useTreeStyle_slicedToArray(arr,i){return function useTreeStyle_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function useTreeStyle_iterableToArrayLimit(arr,i){var _i=arr&&("undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"]);if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function useTreeStyle_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return useTreeStyle_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return useTreeStyle_arrayLikeToArray(o,minLen)}(arr,i)||function useTreeStyle_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function useTreeStyle_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var hooks_useTreeStyle=function useTreeStyle(treeStyles){Object(react.useEffect)((function(){!function handleStyles(){if(treeStyles)for(var _i2=0,_Object$entries=Object.entries(treeStyles);_i2<_Object$entries.length;_i2++){var _ref2=useTreeStyle_slicedToArray(_Object$entries[_i2],2),style=_ref2[0],value=_ref2[1];document.getElementById("react-tree-vis").style.setProperty(CSS_VARIABLE_MAP[style].variableName,value)}}()}),[treeStyles])},BinarySearchTree_BinarySearchTree=(__webpack_require__(824),function BinarySearchTree(_ref,ref){var data=_ref.data,treeStyles=_ref.treeStyles,_useTreeState=hooks_useTreeState(null),tree=_useTreeState.tree,treeJSX=_useTreeState.treeJSX,setTree=_useTreeState.setTree;hooks_useTreeStyle(treeStyles),Object(react.useImperativeHandle)(ref,(function(){return{insert:function insert(value){if(null==tree||!tree.root){var newTree=new BSTree;return newTree.insert(value),void setTree(newTree)}tree.insert(value),setTree(tree)},remove:function remove(value){return!(null==tree||!tree.root)&&(!!tree.search(value)&&(tree.remove(value),setTree(tree.root?tree:null),!0))},search:function search(value){if(null==tree||!tree.root)return!1;var foundNode=tree.search(value);return foundNode&&setTree(tree),foundNode},getData:function getData(traversalOrder){var traversalData=[];return tree[traversalOrder](traversalData),traversalData},clear:function clear(){setTree(new BSTree)},balance:function balance(){tree.balance(),setTree(tree)},generateRandomTree:function generateRandomTree(countOfNodes){var newTree=new BSTree(countOfNodes);setTree(newTree)},checkTreeType:function checkTreeType(){return tree.checkBST()}}}));return Object(react.useEffect)((function(){data&&function handleData(){var newTree=new BSTree;data.forEach((function(elem){return newTree.insert(elem)})),setTree(newTree)}()}),[data]),Object(jsx_runtime.jsx)("div",{id:"react-tree-vis",ref:ref,children:Object(jsx_runtime.jsx)("ul",{children:treeJSX})})});BinarySearchTree_BinarySearchTree.displayName="BinarySearchTree";var BinarySearchTree_compareBinarySearchTree=function compareBinarySearchTree(previousPros,newProps){return previousPros.data&&newProps.data&&function compareArray(array1,array2){if(array1.length!==array2.length)return!1;for(var i=0;i<array1.length;i++)if(array1[i]!==array2[i])return!1;return!0}(previousPros.data,newProps.data)},components_BinarySearchTree=react_default.a.memo(Object(react.forwardRef)(BinarySearchTree_BinarySearchTree),BinarySearchTree_compareBinarySearchTree);try{BinarySearchTree_BinarySearchTree.displayName="BinarySearchTree",BinarySearchTree_BinarySearchTree.__docgenInfo={description:"",displayName:"BinarySearchTree",props:{data:{defaultValue:null,description:"",name:"data",required:!1,type:{name:"number[]"}},treeStyles:{defaultValue:null,description:"",name:"treeStyles",required:!1,type:{name:"TreeStylesType"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/BinarySearchTree.tsx#BinarySearchTree"]={docgenInfo:BinarySearchTree_BinarySearchTree.__docgenInfo,name:"BinarySearchTree",path:"src/components/BinarySearchTree.tsx#BinarySearchTree"})}catch(__react_docgen_typescript_loader_error){}function useTree_slicedToArray(arr,i){return function useTree_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function useTree_iterableToArrayLimit(arr,i){var _i=arr&&("undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"]);if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function useTree_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return useTree_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return useTree_arrayLikeToArray(o,minLen)}(arr,i)||function useTree_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function useTree_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var hooks_useTree=function useTree(){var ref=Object(react.useRef)(null),_useState2=useTree_slicedToArray(Object(react.useState)(null),2),insertFunction=_useState2[0],setInsertFunction=_useState2[1],_useState4=useTree_slicedToArray(Object(react.useState)(null),2),removeFunction=_useState4[0],setRemoveFunction=_useState4[1],_useState6=useTree_slicedToArray(Object(react.useState)(null),2),searchFunction=_useState6[0],setSearchFunction=_useState6[1],_useState8=useTree_slicedToArray(Object(react.useState)(null),2),getDataFunction=_useState8[0],setGetDataFunction=_useState8[1],_useState10=useTree_slicedToArray(Object(react.useState)(null),2),clearFunction=_useState10[0],setClearFunction=_useState10[1],_useState12=useTree_slicedToArray(Object(react.useState)(null),2),balanceFunction=_useState12[0],setBalanceFunction=_useState12[1],_useState14=useTree_slicedToArray(Object(react.useState)(null),2),generateRandomTreeFunction=_useState14[0],setGenerateRandomTreeFunction=_useState14[1],_useState16=useTree_slicedToArray(Object(react.useState)(null),2),checkTreeTypeFunction=_useState16[0],setCheckTreeTypeFunction=_useState16[1];return Object(react.useEffect)((function(){setInsertFunction((function(){return function(value){var _ref$current;return null==ref||null===(_ref$current=ref.current)||void 0===_ref$current?void 0:_ref$current.insert(value)}})),setRemoveFunction((function(){return function(value){var _ref$current2;return null==ref||null===(_ref$current2=ref.current)||void 0===_ref$current2?void 0:_ref$current2.remove(value)}})),setSearchFunction((function(){return function(value){var _ref$current3;return null==ref||null===(_ref$current3=ref.current)||void 0===_ref$current3?void 0:_ref$current3.search(value)}})),setGetDataFunction((function(){return function(traversalOrder){var _ref$current4;return null==ref||null===(_ref$current4=ref.current)||void 0===_ref$current4?void 0:_ref$current4.getData(traversalOrder)}})),setClearFunction((function(){return function(){var _ref$current5;return null==ref||null===(_ref$current5=ref.current)||void 0===_ref$current5?void 0:_ref$current5.clear()}})),setBalanceFunction((function(){return function(){var _ref$current6;return null==ref||null===(_ref$current6=ref.current)||void 0===_ref$current6?void 0:_ref$current6.balance()}})),setGenerateRandomTreeFunction((function(){return function(countOfNodes){var _ref$current7;return null==ref||null===(_ref$current7=ref.current)||void 0===_ref$current7?void 0:_ref$current7.generateRandomTree(countOfNodes)}})),setCheckTreeTypeFunction((function(){return function(){var _ref$current8;return null==ref||null===(_ref$current8=ref.current)||void 0===_ref$current8?void 0:_ref$current8.checkTreeType()}}))}),[ref]),{ref:ref,insert:insertFunction,remove:removeFunction,search:searchFunction,getData:getDataFunction,clear:clearFunction,balance:balanceFunction,generateRandomTree:generateRandomTreeFunction,checkTreeType:checkTreeTypeFunction}};function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return BinarySearchTree_stories_arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||BinarySearchTree_stories_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function BinarySearchTree_stories_slicedToArray(arr,i){return function BinarySearchTree_stories_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function BinarySearchTree_stories_iterableToArrayLimit(arr,i){var _i=arr&&("undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"]);if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||BinarySearchTree_stories_unsupportedIterableToArray(arr,i)||function BinarySearchTree_stories_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function BinarySearchTree_stories_unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return BinarySearchTree_stories_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?BinarySearchTree_stories_arrayLikeToArray(o,minLen):void 0}}function BinarySearchTree_stories_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:"import React, { useState } from 'react'\nimport { Meta, Story } from '@storybook/react'\nimport { BinarySearchTree, useTree } from '../index'\nimport { CSS_VARIABLE_MAP } from '../constants'\n\nconst handleStyleArgTypes = () => {\n  const argTypes = {}\n  for (const [style, { defaultValue }] of Object.entries(CSS_VARIABLE_MAP)) {\n    argTypes[style] = {\n      control: {\n        type: style.includes('Color') ? 'color' : 'text',\n      },\n      defaultValue,\n    }\n  }\n  return argTypes\n}\n\nexport default {\n  title: 'Tree/Binary Search Tree',\n  component: BinarySearchTree,\n  argTypes: handleStyleArgTypes(),\n} as Meta\n\nexport const SimpleExample: Story = ({ ...args }) => {\n  const { ref, insert, remove, search } = useTree()\n\n  const [insertValue, setInsertValue] = useState(0)\n  const [removeValue, setRemoveValue] = useState(0)\n  const [searchValue, setSearchValue] = useState(0)\n  const [found, setFound] = useState(false)\n\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setInsertValue(parseInt(elem.currentTarget.value))\n          }\n        />\n        <button onClick={() => insert(insertValue)}>Insert</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setRemoveValue(parseInt(elem.currentTarget.value))\n          }\n        />\n        <button onClick={() => remove(removeValue)}>Remove</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) => {\n            setFound(false)\n            setSearchValue(parseInt(elem.currentTarget.value))\n          }}\n        />\n        <button onClick={() => setFound(search(searchValue))}>Search</button>\n        <p>Found: {found ? 'Yes' : 'No'}</p>\n      </div>\n      <BinarySearchTree ref={ref} data={[2, 1, 3]} treeStyles={{ ...args }} />\n    </>\n  )\n}\n\nexport const AllFunctions: Story = ({ ...args }) => {\n  const {\n    ref,\n    insert,\n    remove,\n    search,\n    getData,\n    clear,\n    balance,\n    generateRandomTree,\n    checkTreeType,\n  } = useTree()\n\n  const [insertValue, setInsertValue] = useState(0)\n  const [removeValue, setRemoveValue] = useState(0)\n  const [searchValue, setSearchValue] = useState(0)\n  const [randomValue, setRandomValue] = useState(0)\n  const [found, setFound] = useState(false)\n  const [data, setData] = useState([])\n  const [treeType, setTreeType] = useState([])\n\n  const [defaultData, setDefaultData] = useState([1, 2, 3])\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setInsertValue(parseInt(elem.currentTarget.value))\n          }\n          onKeyUp={(e) => {\n            if (e.keyCode === 13) insert(insertValue)\n          }}\n        />\n        <button onClick={() => insert(insertValue)}>Insert</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setRemoveValue(parseInt(elem.currentTarget.value))\n          }\n        />\n        <button onClick={() => remove(removeValue)}>Remove</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) => {\n            setFound(false)\n            setSearchValue(parseInt(elem.currentTarget.value))\n          }}\n        />\n        <button onClick={() => setFound(search(searchValue))}>Search</button>\n        <span>Found: {found ? 'Yes' : 'No'}</span>\n        <br />\n        <button\n          onClick={() => {\n            setData(getData('inorder'))\n          }}\n        >\n          Get Data\n        </button>\n        <span>{data.map((e) => `${e} `)}</span>\n        <br />\n        <button onClick={clear}>Clear</button>\n        <br />\n        <button onClick={balance}>Balance</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setRandomValue(parseInt(elem.currentTarget.value))\n          }\n        />\n        <button onClick={() => generateRandomTree(randomValue)}>Random</button>\n        <br />\n        <button onClick={() => setTreeType(checkTreeType())}>\n          Check Tree Type\n        </button>\n        <span>\n          {treeType.map(\n            (e, index) => `${e},${index !== treeType.length - 1 ? ' ' : ''}`,\n          )}\n        </span>\n        <br />\n        <button\n          onClick={() =>\n            setDefaultData([...defaultData, defaultData.length + 1])\n          }\n        >\n          Append element to data\n        </button>\n      </div>\n      <BinarySearchTree ref={ref} data={defaultData} treeStyles={{ ...args }} />\n    </>\n  )\n}\n",locationsMap:{"simple-example":{startLoc:{col:36,line:25},endLoc:{col:1,line:65},startBody:{col:36,line:25},endBody:{col:1,line:65}},"all-functions":{startLoc:{col:35,line:67},endLoc:{col:1,line:163},startBody:{col:35,line:67},endBody:{col:1,line:163}}}}},title:"Tree/Binary Search Tree",component:components_BinarySearchTree,argTypes:function handleStyleArgTypes(){for(var argTypes={},_i2=0,_Object$entries=Object.entries(CSS_VARIABLE_MAP);_i2<_Object$entries.length;_i2++){var _ref2=BinarySearchTree_stories_slicedToArray(_Object$entries[_i2],2),style=_ref2[0],defaultValue=_ref2[1].defaultValue;argTypes[style]={control:{type:style.includes("Color")?"color":"text"},defaultValue:defaultValue}}return argTypes}()};var BinarySearchTree_stories_SimpleExample=function SimpleExample(_ref3){var args=_extends({},_ref3),_useTree=hooks_useTree(),ref=_useTree.ref,insert=_useTree.insert,remove=_useTree.remove,search=_useTree.search,_useState2=BinarySearchTree_stories_slicedToArray(Object(react.useState)(0),2),insertValue=_useState2[0],setInsertValue=_useState2[1],_useState4=BinarySearchTree_stories_slicedToArray(Object(react.useState)(0),2),removeValue=_useState4[0],setRemoveValue=_useState4[1],_useState6=BinarySearchTree_stories_slicedToArray(Object(react.useState)(0),2),searchValue=_useState6[0],setSearchValue=_useState6[1],_useState8=BinarySearchTree_stories_slicedToArray(Object(react.useState)(!1),2),found=_useState8[0],setFound=_useState8[1];return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[Object(jsx_runtime.jsx)("input",{type:"number",onChange:function onChange(elem){return setInsertValue(parseInt(elem.currentTarget.value))}}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){return insert(insertValue)},children:"Insert"}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("input",{type:"number",onChange:function onChange(elem){return setRemoveValue(parseInt(elem.currentTarget.value))}}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){return remove(removeValue)},children:"Remove"}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("input",{type:"number",onChange:function onChange(elem){setFound(!1),setSearchValue(parseInt(elem.currentTarget.value))}}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){return setFound(search(searchValue))},children:"Search"}),Object(jsx_runtime.jsxs)("p",{children:["Found: ",found?"Yes":"No"]})]}),Object(jsx_runtime.jsx)(components_BinarySearchTree,{ref:ref,data:[2,1,3],treeStyles:Object.assign({},args)})]})},BinarySearchTree_stories_AllFunctions=function AllFunctions(_ref4){var args=_extends({},_ref4),_useTree2=hooks_useTree(),ref=_useTree2.ref,insert=_useTree2.insert,remove=_useTree2.remove,search=_useTree2.search,getData=_useTree2.getData,clear=_useTree2.clear,balance=_useTree2.balance,generateRandomTree=_useTree2.generateRandomTree,checkTreeType=_useTree2.checkTreeType,_useState10=BinarySearchTree_stories_slicedToArray(Object(react.useState)(0),2),insertValue=_useState10[0],setInsertValue=_useState10[1],_useState12=BinarySearchTree_stories_slicedToArray(Object(react.useState)(0),2),removeValue=_useState12[0],setRemoveValue=_useState12[1],_useState14=BinarySearchTree_stories_slicedToArray(Object(react.useState)(0),2),searchValue=_useState14[0],setSearchValue=_useState14[1],_useState16=BinarySearchTree_stories_slicedToArray(Object(react.useState)(0),2),randomValue=_useState16[0],setRandomValue=_useState16[1],_useState18=BinarySearchTree_stories_slicedToArray(Object(react.useState)(!1),2),found=_useState18[0],setFound=_useState18[1],_useState20=BinarySearchTree_stories_slicedToArray(Object(react.useState)([]),2),data=_useState20[0],setData=_useState20[1],_useState22=BinarySearchTree_stories_slicedToArray(Object(react.useState)([]),2),treeType=_useState22[0],setTreeType=_useState22[1],_useState24=BinarySearchTree_stories_slicedToArray(Object(react.useState)([1,2,3]),2),defaultData=_useState24[0],setDefaultData=_useState24[1];return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsxs)("div",{children:[Object(jsx_runtime.jsx)("input",{type:"number",onChange:function onChange(elem){return setInsertValue(parseInt(elem.currentTarget.value))},onKeyUp:function onKeyUp(e){13===e.keyCode&&insert(insertValue)}}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){return insert(insertValue)},children:"Insert"}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("input",{type:"number",onChange:function onChange(elem){return setRemoveValue(parseInt(elem.currentTarget.value))}}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){return remove(removeValue)},children:"Remove"}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("input",{type:"number",onChange:function onChange(elem){setFound(!1),setSearchValue(parseInt(elem.currentTarget.value))}}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){return setFound(search(searchValue))},children:"Search"}),Object(jsx_runtime.jsxs)("span",{children:["Found: ",found?"Yes":"No"]}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){setData(getData("inorder"))},children:"Get Data"}),Object(jsx_runtime.jsx)("span",{children:data.map((function(e){return"".concat(e," ")}))}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("button",{onClick:clear,children:"Clear"}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("button",{onClick:balance,children:"Balance"}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("input",{type:"number",onChange:function onChange(elem){return setRandomValue(parseInt(elem.currentTarget.value))}}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){return generateRandomTree(randomValue)},children:"Random"}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){return setTreeType(checkTreeType())},children:"Check Tree Type"}),Object(jsx_runtime.jsx)("span",{children:treeType.map((function(e,index){return"".concat(e,",").concat(index!==treeType.length-1?" ":"")}))}),Object(jsx_runtime.jsx)("br",{}),Object(jsx_runtime.jsx)("button",{onClick:function onClick(){return setDefaultData([].concat(_toConsumableArray(defaultData),[defaultData.length+1]))},children:"Append element to data"})]}),Object(jsx_runtime.jsx)(components_BinarySearchTree,{ref:ref,data:defaultData,treeStyles:Object.assign({},args)})]})};BinarySearchTree_stories_SimpleExample.parameters=Object.assign({storySource:{source:"({ ...args }) => {\n  const { ref, insert, remove, search } = useTree()\n\n  const [insertValue, setInsertValue] = useState(0)\n  const [removeValue, setRemoveValue] = useState(0)\n  const [searchValue, setSearchValue] = useState(0)\n  const [found, setFound] = useState(false)\n\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setInsertValue(parseInt(elem.currentTarget.value))\n          }\n        />\n        <button onClick={() => insert(insertValue)}>Insert</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setRemoveValue(parseInt(elem.currentTarget.value))\n          }\n        />\n        <button onClick={() => remove(removeValue)}>Remove</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) => {\n            setFound(false)\n            setSearchValue(parseInt(elem.currentTarget.value))\n          }}\n        />\n        <button onClick={() => setFound(search(searchValue))}>Search</button>\n        <p>Found: {found ? 'Yes' : 'No'}</p>\n      </div>\n      <BinarySearchTree ref={ref} data={[2, 1, 3]} treeStyles={{ ...args }} />\n    </>\n  )\n}"}},BinarySearchTree_stories_SimpleExample.parameters),BinarySearchTree_stories_AllFunctions.parameters=Object.assign({storySource:{source:"({ ...args }) => {\n  const {\n    ref,\n    insert,\n    remove,\n    search,\n    getData,\n    clear,\n    balance,\n    generateRandomTree,\n    checkTreeType,\n  } = useTree()\n\n  const [insertValue, setInsertValue] = useState(0)\n  const [removeValue, setRemoveValue] = useState(0)\n  const [searchValue, setSearchValue] = useState(0)\n  const [randomValue, setRandomValue] = useState(0)\n  const [found, setFound] = useState(false)\n  const [data, setData] = useState([])\n  const [treeType, setTreeType] = useState([])\n\n  const [defaultData, setDefaultData] = useState([1, 2, 3])\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setInsertValue(parseInt(elem.currentTarget.value))\n          }\n          onKeyUp={(e) => {\n            if (e.keyCode === 13) insert(insertValue)\n          }}\n        />\n        <button onClick={() => insert(insertValue)}>Insert</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setRemoveValue(parseInt(elem.currentTarget.value))\n          }\n        />\n        <button onClick={() => remove(removeValue)}>Remove</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) => {\n            setFound(false)\n            setSearchValue(parseInt(elem.currentTarget.value))\n          }}\n        />\n        <button onClick={() => setFound(search(searchValue))}>Search</button>\n        <span>Found: {found ? 'Yes' : 'No'}</span>\n        <br />\n        <button\n          onClick={() => {\n            setData(getData('inorder'))\n          }}\n        >\n          Get Data\n        </button>\n        <span>{data.map((e) => `${e} `)}</span>\n        <br />\n        <button onClick={clear}>Clear</button>\n        <br />\n        <button onClick={balance}>Balance</button>\n        <br />\n        <input\n          type=\"number\"\n          onChange={(elem) =>\n            setRandomValue(parseInt(elem.currentTarget.value))\n          }\n        />\n        <button onClick={() => generateRandomTree(randomValue)}>Random</button>\n        <br />\n        <button onClick={() => setTreeType(checkTreeType())}>\n          Check Tree Type\n        </button>\n        <span>\n          {treeType.map(\n            (e, index) => `${e},${index !== treeType.length - 1 ? ' ' : ''}`,\n          )}\n        </span>\n        <br />\n        <button\n          onClick={() =>\n            setDefaultData([...defaultData, defaultData.length + 1])\n          }\n        >\n          Append element to data\n        </button>\n      </div>\n      <BinarySearchTree ref={ref} data={defaultData} treeStyles={{ ...args }} />\n    </>\n  )\n}"}},BinarySearchTree_stories_AllFunctions.parameters)},836:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__(17),__webpack_require__(29),__webpack_require__(46),__webpack_require__(815),__webpack_require__(36),__webpack_require__(37),__webpack_require__(816),__webpack_require__(817),__webpack_require__(415);var client_api=__webpack_require__(841),esm=__webpack_require__(5),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(client_api.b)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(client_api.c)(loader,!1)}));case"parameters":return Object(client_api.d)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(client_api.a)(enhancer)}));case"globals":case"globalTypes":var v={};return v[key]=value,Object(client_api.d)(v,!1);default:return console.log(key+" was not supported :( !")}}))}},[[460,2,3]]]);